pipeline {
    //RUN THIS PIPELINE ON THE REMOTE APPLICATION SERVER
    agent { label 'application-server' }

    environment {
        APP_DIR = 'flask-backend'
        PM2_BIN = 'pm2' // Assuming PM2 is now in the PATH on the agent machine
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Clones the entire single repository into the agent workspace
                git branch: 'main', credentialsId: 'YOUR_GIT_CREDENTIAL_ID', url: 'https://github.com/pradeepdhanave/CICD-Jenkins.git'
            }
        }

        stage('Setup Environment & Install Dependencies') {
            steps {
                // Navigate to the app directory
                sh "cd ${APP_DIR} && python3 -m venv venv"
                // Install dependencies into the virtual environment
                sh "cd ${APP_DIR} && ./venv/bin/python -m pip install --upgrade pip"
                sh "cd ${APP_DIR} && ./venv/bin/python -m pip install -r requirements.txt"
            }
        }

        stage('Deploy & Restart') {
            steps {
                // Restart the application using the PM2 binary.
                // The logical OR (||) ensures that if the app is not found, it starts it new.
                sh "${PM2_BIN} restart flask-app || ${PM2_BIN} start ./${APP_DIR}/venv/bin/python --name flask-app -- ./${APP_DIR}/app.py"
                echo 'Flask app deployment complete and process restarted.'
            }
        }
    }
}